{"remainingRequest":"/Users/pengyouwei/Desktop/library/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/pengyouwei/Desktop/library/node_modules/@vuepress/plugin-search/match-query.js","dependencies":[{"path":"/Users/pengyouwei/Desktop/library/node_modules/@vuepress/plugin-search/match-query.js","mtime":1584694065194},{"path":"/Users/pengyouwei/Desktop/library/node_modules/cache-loader/dist/cjs.js","mtime":1584694063217},{"path":"/Users/pengyouwei/Desktop/library/node_modules/babel-loader/lib/index.js","mtime":1584694063229}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChxdWVyeSwgcGFnZSkgewogIHZhciBhZGRpdGlvbmFsU3RyID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBudWxsOwogIHZhciBkb21haW4gPSBnZXQocGFnZSwgJ3RpdGxlJywgJycpOwoKICBpZiAoZ2V0KHBhZ2UsICdmcm9udG1hdHRlci50YWdzJykpIHsKICAgIGRvbWFpbiArPSAiICIuY29uY2F0KHBhZ2UuZnJvbnRtYXR0ZXIudGFncy5qb2luKCcgJykpOwogIH0KCiAgaWYgKGFkZGl0aW9uYWxTdHIpIHsKICAgIGRvbWFpbiArPSAiICIuY29uY2F0KGFkZGl0aW9uYWxTdHIpOwogIH0KCiAgcmV0dXJuIG1hdGNoVGVzdChxdWVyeSwgZG9tYWluKTsKfSk7Cgp2YXIgbWF0Y2hUZXN0ID0gZnVuY3Rpb24gbWF0Y2hUZXN0KHF1ZXJ5LCBkb21haW4pIHsKICB2YXIgZXNjYXBlUmVnRXhwID0gZnVuY3Rpb24gZXNjYXBlUmVnRXhwKHN0cikgewogICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLS9cXF4kKis/LigpfFtcXXt9XS9nLCAnXFwkJicpOwogIH07CgogIHZhciB3b3JkcyA9IHF1ZXJ5LnNwbGl0KC9ccysvZykubWFwKGZ1bmN0aW9uIChzdHIpIHsKICAgIHJldHVybiBzdHIudHJpbSgpOwogIH0pLmZpbHRlcihmdW5jdGlvbiAoc3RyKSB7CiAgICByZXR1cm4gISFzdHI7CiAgfSk7CiAgdmFyIGhhc1RyYWlsaW5nU3BhY2UgPSBxdWVyeS5lbmRzV2l0aCgnICcpOwogIHZhciBzZWFyY2hSZWdleCA9IG5ldyBSZWdFeHAod29yZHMubWFwKGZ1bmN0aW9uICh3b3JkLCBpbmRleCkgewogICAgaWYgKHdvcmRzLmxlbmd0aCA9PT0gaW5kZXggKyAxICYmICFoYXNUcmFpbGluZ1NwYWNlKSB7CiAgICAgIC8vIFRoZSBsYXN0IHdvcmQgLSBvayB3aXRoIHRoZSB3b3JkIGJlaW5nICJzdGFydHN3aXRoIi1saWtlCiAgICAgIHJldHVybiAiKD89LipcXGIiLmNvbmNhdChlc2NhcGVSZWdFeHAod29yZCksICIpIik7CiAgICB9IGVsc2UgewogICAgICAvLyBOb3QgdGhlIGxhc3Qgd29yZCAtIGV4cGVjdCB0aGUgd2hvbGUgd29yZCBleGFjdGx5CiAgICAgIHJldHVybiAiKD89LipcXGIiLmNvbmNhdChlc2NhcGVSZWdFeHAod29yZCksICJcXGIpIik7CiAgICB9CiAgfSkuam9pbignJykgKyAnLisnLCAnZ2knKTsKICByZXR1cm4gc2VhcmNoUmVnZXgudGVzdChkb21haW4pOwp9Ow=="},{"version":3,"sources":["/Users/pengyouwei/Desktop/library/node_modules/@vuepress/plugin-search/match-query.js"],"names":["get","query","page","additionalStr","domain","frontmatter","tags","join","matchTest","escapeRegExp","str","replace","words","split","map","trim","filter","hasTrailingSpace","endsWith","searchRegex","RegExp","word","index","length","test"],"mappings":";;;;;;;;;;AACA,OAAOA,GAAP,MAAgB,YAAhB;AAEA,gBAAe,UAACC,KAAD,EAAQC,IAAR,EAAuC;AAAA,MAAzBC,aAAyB,uEAAT,IAAS;AACpD,MAAIC,MAAM,GAAGJ,GAAG,CAACE,IAAD,EAAO,OAAP,EAAgB,EAAhB,CAAhB;;AAEA,MAAIF,GAAG,CAACE,IAAD,EAAO,kBAAP,CAAP,EAAmC;AACjCE,IAAAA,MAAM,eAAQF,IAAI,CAACG,WAAL,CAAiBC,IAAjB,CAAsBC,IAAtB,CAA2B,GAA3B,CAAR,CAAN;AACD;;AAED,MAAIJ,aAAJ,EAAmB;AACjBC,IAAAA,MAAM,eAAQD,aAAR,CAAN;AACD;;AAED,SAAOK,SAAS,CAACP,KAAD,EAAQG,MAAR,CAAhB;AACD,CAZD;;AAcA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACP,KAAD,EAAQG,MAAR,EAAmB;AACnC,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,CAAY,uBAAZ,EAAqC,MAArC,CAAJ;AAAA,GAAxB;;AAEA,MAAMC,KAAK,GAAGX,KAAK,CAChBY,KADW,CACL,MADK,EAEXC,GAFW,CAEP,UAAAJ,GAAG;AAAA,WAAIA,GAAG,CAACK,IAAJ,EAAJ;AAAA,GAFI,EAGXC,MAHW,CAGJ,UAAAN,GAAG;AAAA,WAAI,CAAC,CAACA,GAAN;AAAA,GAHC,CAAd;AAIA,MAAMO,gBAAgB,GAAGhB,KAAK,CAACiB,QAAN,CAAe,GAAf,CAAzB;AACA,MAAMC,WAAW,GAAG,IAAIC,MAAJ,CAClBR,KAAK,CACFE,GADH,CACO,UAACO,IAAD,EAAOC,KAAP,EAAiB;AACpB,QAAIV,KAAK,CAACW,MAAN,KAAiBD,KAAK,GAAG,CAAzB,IAA8B,CAACL,gBAAnC,EAAqD;AACnD;AACA,+BAAkBR,YAAY,CAACY,IAAD,CAA9B;AACD,KAHD,MAGO;AACL;AACA,+BAAkBZ,YAAY,CAACY,IAAD,CAA9B;AACD;AACF,GATH,EAUGd,IAVH,CAUQ,EAVR,IAUc,IAXI,EAYlB,IAZkB,CAApB;AAcA,SAAOY,WAAW,CAACK,IAAZ,CAAiBpB,MAAjB,CAAP;AACD,CAvBD","sourcesContent":["\nimport get from 'lodash/get'\n\nexport default (query, page, additionalStr = null) => {\n  let domain = get(page, 'title', '')\n\n  if (get(page, 'frontmatter.tags')) {\n    domain += ` ${page.frontmatter.tags.join(' ')}`\n  }\n\n  if (additionalStr) {\n    domain += ` ${additionalStr}`\n  }\n\n  return matchTest(query, domain)\n}\n\nconst matchTest = (query, domain) => {\n  const escapeRegExp = str => str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\n  const words = query\n    .split(/\\s+/g)\n    .map(str => str.trim())\n    .filter(str => !!str)\n  const hasTrailingSpace = query.endsWith(' ')\n  const searchRegex = new RegExp(\n    words\n      .map((word, index) => {\n        if (words.length === index + 1 && !hasTrailingSpace) {\n          // The last word - ok with the word being \"startswith\"-like\n          return `(?=.*\\\\b${escapeRegExp(word)})`\n        } else {\n          // Not the last word - expect the whole word exactly\n          return `(?=.*\\\\b${escapeRegExp(word)}\\\\b)`\n        }\n      })\n      .join('') + '.+',\n    'gi'\n  )\n  return searchRegex.test(domain)\n}\n\n"]}]}